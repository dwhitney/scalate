<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2009-2011 the original author or authors.
    See the notice.md file distributed with this work for additional
    information regarding copyright ownership.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.fusesource.scalate</groupId>
  <artifactId>scalate-project</artifactId>
  <version>1.6.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>${project.artifactId}</name>
  <description>Scalate Project POM</description>

  <prerequisites>
    <maven>2.0.9</maven>
  </prerequisites>

  <properties>
    <!-- build settings -->
    <forge-project-id>scalate</forge-project-id>
    <forge-project-id-uc>SCALATE</forge-project-id-uc>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <release-altGitURL>scm:git:ssh://git@github.com:scalate/scalate.git</release-altGitURL>

    <compiler.fork>false</compiler.fork>

    <!-- environment settings -->
    <jetty-port>8080</jetty-port>
    <scalate.editor>${env.SCALATE_EDITOR}</scalate.editor>
    <scalate.mode>development</scalate.mode>
    <scalate.workdir>${basedir}/target/_scalate</scalate.workdir>
    <test.useFile>false</test.useFile>

    <!-- version info -->
    <asm-version>3.1</asm-version>
    <jansi-version>1.4</jansi-version>
    <jersey-version>1.5</jersey-version>
    <jetty-version>7.2.1.v20101111</jetty-version>
    <jline-version>0.9.95.20100209</jline-version>
    <junit-version>4.5</junit-version>
    <!--
        <karaf-version>2.1.99-SNAPSHOT</karaf-version>
    -->
    <karaf-version>2.1.0</karaf-version>
    <logback-version>0.9.26</logback-version>
    <markdownj-version>0.3.0-1.0.2b4</markdownj-version>
    <org.springframework.version>3.0.5.RELEASE</org.springframework.version>

    <osgi-version>4.2.0</osgi-version>

    <scala-version>2.9.0-1</scala-version>

    <scalatest-version>1.4.1</scalatest-version>

    <sbt-version>0.7.3</sbt-version>
    <scalamd-version>1.5</scalamd-version>
    <servlet-api-version>2.5</servlet-api-version>
    <slf4j-version>1.6.1</slf4j-version>
    <wikitext-version>1.2</wikitext-version>


    <!-- plugin version info -->
    <assembly-plugin-version>2.2</assembly-plugin-version>
    <bundle-plugin-version>2.3.4</bundle-plugin-version>
    <changes-plugin-version>2.3</changes-plugin-version>
    <compiler-plugin-version>2.3.2</compiler-plugin-version>
    <deploy-plugin-version>2.5</deploy-plugin-version>
    <eclipse-plugin-version>2.8</eclipse-plugin-version>
    <idea-plugin-version>2.3-20100704</idea-plugin-version>
    <install-plugin-version>2.3.1</install-plugin-version>
    <mvnplugins-version>1.15</mvnplugins-version>
    <jar-plugin-version>2.3.1</jar-plugin-version>
<!--
    Don't use latest Jetty plugin as it requires Servlet 3.0 I think...

    <jetty-plugin-version>8.0.0.M2</jetty-plugin-version>
    <jetty-plugin-version>7.2.1.v20101111</jetty-plugin-version>
-->
    <jetty-plugin-version>7.2.1.v20101111</jetty-plugin-version>
    <jxr-maven-plugin>2.0-beta-1</jxr-maven-plugin>
    <project-info-reports-plugin-version>2.2</project-info-reports-plugin-version>
    <release-plugin-version>2.1</release-plugin-version>
    <resources-plugin-version>2.4.3</resources-plugin-version>
    <scala-plugin-version>2.15.0</scala-plugin-version>
    <scm-plugin-version>1.4</scm-plugin-version>
    <site-plugin-version>3.0-beta-3</site-plugin-version>
    <source-plugin-version>2.1.2</source-plugin-version>
    <surefire-plugin-version>2.6</surefire-plugin-version>
    <surefire-report-plugin-vesrion>2.6</surefire-report-plugin-vesrion>
    <taglist-plugin-version>2.4</taglist-plugin-version>
    <tomcat-plugin-version>1.1</tomcat-plugin-version>
    <wagon-webdav-plugin-version>1.0-beta-7</wagon-webdav-plugin-version>
    <war-plugin-version>2.1.1</war-plugin-version>


    <!-- osgi settings -->
    <scalate.osgi.import>*</scalate.osgi.import>
  </properties>

  <url>http://scalate.fusesource.org/</url>
  <inceptionYear>2010</inceptionYear>

  <organization>
    <name>FuseSource</name>
    <url>http://fusesource.com/</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <mailingLists>
    <mailingList>
      <name>Scalate discussion list</name>
      <archive>http://groups.google.com/group/scalate</archive>
      <post>scalate@googlegroups.com</post>
      <subscribe>scalate+subscribe@googlegroups.com</subscribe>
      <unsubscribe>scalate+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList>
    <mailingList>
      <name>Commits and issue tracker list</name>
      <archive>http://groups.google.com/group/scalate-commits</archive>
      <post>scalate-commits@googlegroups.com</post>
      <subscribe>scalate-commits+subscribe@googlegroups.com</subscribe>
      <unsubscribe>scalate-commits+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList>
  </mailingLists>

  <scm>
    <connection>scm:git:git://github.com/scalate/scalate.git</connection>
    <!-- 
    TODO - hack this in your ~/.m2/settings.xml to point to your local checkout for releases 
    see comments here: http://jira.codehaus.org/browse/MRELEASE-605
    -->
    <developerConnection>${release-altGitURL}</developerConnection>
    <url>http://github.com/scalate/scalate/tree/master</url>
  </scm>

  <issueManagement>
    <system>assembla</system>
    <url>http://scalate.assembla.com/spaces/scalate/support/tickets</url>
  </issueManagement>

  <ciManagement>
    <system>teamcity</system>
    <url>http://ci.fusesource.com/teamcity/project.html?projectId=project33</url>
  </ciManagement>

  <distributionManagement>
    <repository>
      <id>fusesource-nexus-staging</id>
      <name>Fusesource Release Repository</name>
      <url>http://repo.fusesource.com/nexus/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>fusesource-nexus-snapshots</id>
      <name>Fusesource Nexus Snapshots</name>
      <url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
    <site>
      <id>website.fusesource.org</id>
      <name>website</name>
      <url>dav:http://fusesource.com/forge/dav/${forge-project-id}/maven/${project.version}</url>
    </site>
  </distributionManagement>

  <developers>
    <developer>
      <id>chirino</id>
      <name>Hiram Chirino</name>
      <url>http://hiramchirino.com/blog/</url>
      <organization>FuseSource</organization>
      <organizationUrl>http://fusesource.com/</organizationUrl>
    </developer>
    <developer>
      <id>jstrachan</id>
      <name>James Strachan</name>
      <url>http://macstrac.blogspot.com/</url>
      <organization>FuseSource</organization>
      <organizationUrl>http://fusesource.com/</organizationUrl>
    </developer>
    <developer>
      <id>matthild</id>
      <name>Matt Hildebrand</name>
    </developer>
    <developer>
      <id>PaulSandoz</id>
      <name>Paul Sandoz</name>
      <url>http://blogs.sun.com/sandoz/</url>
      <organization>Oracle</organization>
      <organizationUrl>http://oracle.com/</organizationUrl>
    </developer>
    <developer>
      <id>sptz45</id>
      <name>Spiros Tzavellas</name>
      <url>http://www.tzavellas.com</url>
      <timezone>+2</timezone>
    </developer>
  </developers>

  <modules>
    <module>scalate-util</module>
    <module>scalate-core</module>
    <module>scalate-test</module>
    <module>scalate-wikitext</module>
    <module>scalate-page</module>
    <module>scalate-web</module>
    <module>scalate-spring-mvc</module>
    <module>scalate-guice</module>
    <module>scalate-camel</module>
    <module>scalate-jrebel</module>
    <module>scalate-war</module>
    <module>samples</module>
    <module>maven-scalate-plugin</module>
    <module>sbt-scalate-plugin</module>
    <module>archetypes</module>
    <module>scalate-tool</module>
    <module>scalate-jsp-converter</module>
    <module>scalate-markdownj</module>
    <module>scalate-jruby</module>
  </modules>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet-api-version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey-version}</version>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-htmlunit-driver</artifactId>
        <version>2.0a5</version>
      </dependency>

      <dependency>
        <groupId>org.markdownj</groupId>
        <artifactId>markdownj</artifactId>
        <version>${markdownj-version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-version}</version>
      </dependency>

      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>${osgi-version}</version>
        <scope>provided</scope>
        <optional>true</optional>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-version}</version>
        <scope>runtime</scope>
        <optional>true</optional>
      </dependency>

      <!-- testing -->
      <!--
            <dependency>
              <groupId>org.scala-tools.testing</groupId>
              <artifactId>specs_2.8.0.Beta1</artifactId>
              <version>1.6.3</version>
            </dependency>
      -->
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_2.9.0</artifactId>
        <version>${scalatest-version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.2</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>install</defaultGoal>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>${wagon-webdav-plugin-version}</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.scala-tools</groupId>
          <artifactId>maven-scala-plugin</artifactId>
          <version>${scala-plugin-version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- lets disable vscaladoc -->
            <scaladocClassName>scala.tools.nsc.ScalaDoc</scaladocClassName>
            <!--
                        <scalaJars>
                          <scalaJar>
                            <groupId>org.scala-lang</groupId>
                            <artifactId>scala-compiler</artifactId>
                            <version>${scala-version}</version>
                          </scalaJar>
                        </scalaJars>
            -->
            <jvmArgs>
              <jvmArg>-Xmx1024m</jvmArg>
            </jvmArgs>
            <args>
              <!-- arg>-unchecked</arg -->
              <arg>-deprecation</arg>
            </args>
            <scalaVersion>${scala-version}</scalaVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin-version}</version>
          <configuration>
            <source>1.5</source>
            <target>1.5</target>
            <optimize>true</optimize>
            <debug>true</debug>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source-plugin-version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar-plugin-version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>


        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${war-plugin-version}</version>
          <configuration>
            <attachClasses>true</attachClasses>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${assembly-plugin-version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-idea-plugin</artifactId>
          <version>${idea-plugin-version}</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${eclipse-plugin-version}</version>
          <configuration>
            <outputDirectory>${basedir}/eclipse-classes</outputDirectory>
            <downloadSources>true</downloadSources>

            <!-- Eclipse update site for the Checkstyle plugin is http://eclipse-cs.sourceforge.net/update -->
            <!-- Eclipse update site for the PMD plugin is http://pmd.sf.net/eclipse -->
            <buildcommands>
              <java.lang.String>org.eclipse.jdt.core.javabuilder</java.lang.String>
              <java.lang.String>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</java.lang.String>
              <!-- Lets not enable the PMD buidler just yet..
              <java.lang.String>net.sourceforge.pmd.runtime.pmdBuilder</java.lang.String>
              -->
            </buildcommands>
            <projectnatures>
              <nature>org.eclipse.jdt.core.javanature</nature>
              <nature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</nature>
              <!-- Lets not enable the PMD buidler just yet..
              <nature>net.sourceforge.pmd.runtime.pmdNature</nature>
              -->
            </projectnatures>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty-plugin-version}</version>
          <configuration>
            <!--
            <connectors>
              <connector implementation="org.eclipse.jetty.nio.SelectChannelConnector">
                <port>${jetty.port}</port>
                <maxIdleTime>60000</maxIdleTime>
              </connector>
            </connectors>
            -->

            <webAppConfig>
              <contextPath>/</contextPath>
              <resourceBase>${basedir}/src/main/webapp</resourceBase>
              <unpackOverlays>true</unpackOverlays>
            </webAppConfig>

            <systemProperties>
              <!-- enable easy JMX connection to JConsole -->
              <systemProperty>
                <name>com.sun.management.jmxremote</name>
                <value />
              </systemProperty>
              <systemProperty>
                <name>scalate.editor</name>
                <value>${scalate.editor}</value>
              </systemProperty>
              <systemProperty>
                <name>scalate.workdir</name>
                <value>${scalate.workdir}</value>
              </systemProperty>
              <systemProperty>
                <name>scalate.mode</name>
                <value>${scalate.mode}</value>
              </systemProperty>
            </systemProperties>
            <scanIntervalSeconds>0</scanIntervalSeconds>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tomcat-maven-plugin</artifactId>
          <version>${tomcat-plugin-version}</version>
          <configuration>
            <path>/</path>

            <systemProperties>
              <!-- enable easy JMX connection to JConsole -->
              <com.sun.management.jmxremote />

              <!-- Scalate console configuration -->
              <scalate.mode>${scalate.mode}</scalate.mode>
              <scalate.editor>${scalateEditor}</scalate.editor>
              <scalate.workdir>${scalate.workdir}</scalate.workdir>
              <scalate.package.resources>${scalate.package.resources}</scalate.package.resources>
            </systemProperties>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${install-plugin-version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${bundle-plugin-version}</version>
        <extensions>true</extensions>
        <inherited>true</inherited>
        <configuration>
          <instructions>
            <Implementation-Title>${project.artifactId}</Implementation-Title>
            <Implementation-Version>${project.version}</Implementation-Version>
            <Bundle-Name>${project.artifactId}</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Export-Package>{local-packages};version=${project.version};-noimport:=true</Export-Package>
            <Import-Package>${scalate.osgi.import}</Import-Package>
            <Private-Package>!*</Private-Package>
            <_versionpolicy-impl>[$(version;==;$(@)),$(version;=+;$(@)))</_versionpolicy-impl>
            <_versionpolicy-uses>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy-uses>
            <_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>
            <_failok>false</_failok>
          </instructions>
        </configuration>
      </plugin>
        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${changes-plugin-version}</version>
        <configuration>
          <filteringChanges>true</filteringChanges>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin-version}</version>
        <configuration>
          <!-- we must turn off the use of system class loader so our tests can find stuff - otherwise scala compiler can't find stuff -->
          <useSystemClassLoader>false</useSystemClassLoader>

          <forkMode>once</forkMode>
          <childDelegation>false</childDelegation>
          <useFile>${test.useFile}</useFile>
          <failIfNoTests>false</failIfNoTests>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>${site-plugin-version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.skins</groupId>
            <artifactId>maven-default-skin</artifactId>
            <version>1.0</version>
          </dependency>
          <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-webdav-jackrabbit</artifactId>
            <version>1.0-beta-7</version>
            <exclusions>
              <exclusion>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>${project-info-reports-plugin-version}</version>
              <configuration>
                <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                <webAccessUrl>http://github.com/scalate/scalate</webAccessUrl>
              </configuration>
              <reports>
                <report>index</report>
                <report>summary</report>
                <report>plugins</report>
                <report>dependencies</report>
                <report>dependency-convergence</report>
                <report>dependency-management</report>
                <report>license</report>
                <report>mailing-list</report>
                <report>project-team</report>
                <report>issue-tracking</report>
                <report>cim</report>
                <!--
                 Doesn't seem to grok git modules etc
                <report>scm</report>
                -->


              </reports>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${release-plugin-version}</version>
        <configuration>
          <pushChanges>false</pushChanges>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <allowTimestampedSnapshots>false</allowTimestampedSnapshots>
          <preparationGoals>clean install</preparationGoals>
          <goals>deploy</goals>
          <arguments>-Prelease</arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${deploy-plugin-version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>${scm-plugin-version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>${scm-plugin-version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${site-plugin-version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-webdav-jackrabbit</artifactId>
            <version>${wagon-webdav-plugin-version}</version>
            <exclusions>
              <exclusion>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>
      
      -->
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>${scala-plugin-version}</version>
        <configuration>
          <scalaVersion>${scala-version}</scalaVersion>
          <jvmArgs>
            <jvmArg>-Xmx850M</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jxr-maven-plugin</artifactId>
        <version>${jxr-maven-plugin}</version>
        <configuration>
          <aggregate>true</aggregate>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${surefire-report-plugin-vesrion}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!-- Can't use this until it supports scala based mojo extractors
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>2.5</version>
      </plugin>
      -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${changes-plugin-version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>jira-report</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <filteringChanges>true</filteringChanges>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>${taglist-plugin-version}</version>
      </plugin>

    </plugins>

  </reporting>

  <profiles>
    <!-- enables extra repositories which may have some
         goodies that have not reached central yet -->
    <profile>
      <id>download</id>
      <repositories>
        <repository>
          <id>repo1.maven</id>
          <name>Maven Central Repo</name>
          <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
          <id>fusesource.m2</id>
          <name>FuseSource Community Release Repository</name>
          <url>http://repo.fusesource.com/maven2</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
        <repository>
          <id>fusesource.m2-snapshot</id>
          <name>FuseSource Community Snapshot Repository</name>
          <url>http://repo.fusesource.com/maven2-snapshot</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>false</enabled>
          </releases>
        </repository>
        <repository>
          <id>fusesource.nexus.m2-snapshot</id>
          <name>FuseSource Community Snapshot Repository</name>
          <url>http://repo.fusesource.com/nexus/content/groups/public-snapshots</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>false</enabled>
          </releases>
        </repository>
        <repository>
          <id>servicemix.m2</id>
          <name>ServiceMix M2 Repository</name>
          <url>http://svn.apache.org/repos/asf/servicemix/m2-repo</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>

        <repository>
          <id>java.net.m2</id>
          <name>java.net Maven 2 Repo</name>
          <url>http://download.java.net/maven/2</url>
        </repository>
        <repository>
          <id>openqa-releases</id>
          <name>OpenQA Releases</name>
          <url>http://archiva.openqa.org/repository/releases</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>

        <repository>
          <id>glassfish-repo-archive</id>
          <name>Nexus repository collection for Glassfish</name>
          <url>http://maven.glassfish.org/content/groups/glassfish</url>
          <snapshots>
            <updatePolicy>never</updatePolicy>
          </snapshots>
        </repository>

        <repository>
          <id>scala</id>
          <name>Scala Tools</name>
          <!--
                    <url>http://nexus.scala-tools.org/content/repositories/releases</url>
          -->
          <url>http://scala-tools.org/repo-releases</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>snapshots.scala-tools.org</id>
          <name>Scala-Tools Maven2 Snapshot Repository</name>
          <url>http://scala-tools.org/repo-snapshots</url>
          <snapshots>
            <enabled>true</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </releases>
        </repository>
        <!--
                <repository>
                  <id>nexus.snapshots.scala-tools.org</id>
                  <name>Scala-Tools Maven2 Snapshot Repository</name>
                  <url>http://nexus.scala-tools.org/content/repositories/snapshots</url>
                  <snapshots>
                    <enabled>true</enabled>
                    <checksumPolicy>fail</checksumPolicy>
                  </snapshots>
                  <releases>
                    <enabled>true</enabled>
                    <checksumPolicy>fail</checksumPolicy>
                  </releases>
                </repository>
        -->
        <repository>
          <id>apache.snapshots</id>
          <name>Apache Development Snapshot Repository</name>
          <url>https://repository.apache.org/content/repositories/snapshots</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>

        <repository>
          <id>fluido-skin</id>
          <url>http://fluido-skin.googlecode.com/svn/repo/</url>
        </repository>

      </repositories>

      <pluginRepositories>
        <pluginRepository>
          <id>scala</id>
          <name>Scala Tools</name>
          <!--
                    <url>http://nexus.scala-tools.org/content/repositories/releases</url>
          -->
          <url>http://scala-tools.org/repo-releases</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>snapshots.scala-tools.org</id>
          <name>Scala-Tools Maven2 Snapshot Repository</name>
          <url>http://scala-tools.org/repo-snapshots</url>
          <snapshots>
            <enabled>true</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </releases>
        </pluginRepository>

        <!-- TODO remove ASAP! for now use the 2.1 staging release of the mvn release plugin until its released -->
        <pluginRepository>
          <id>staging.002.apache.org</id>
          <url>https://repository.apache.org/content/repositories/maven-002</url>
        </pluginRepository>

        <pluginRepository>
          <id>mc-releases</id>
          <name>mc-releases</name>
          <url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>
    </profile>

    <!-- use a profile for generating the maven site since we require a snapshot version for 2.8.0 Scala -->
    <profile>
      <id>site</id>
      <!--
            <properties>
              &lt;!&ndash; this snapshot release works with 2.8.0-beta1 &ndash;&gt;
              <scala-plugin-version>2.13.2-SNAPSHOT</scala-plugin-version>
            </properties>
            <reporting>
              <plugins>
                <plugin>
                  <groupId>org.scala-tools</groupId>
                  <artifactId>maven-scala-plugin</artifactId>
                  <configuration>
                    <scalaVersion>${scala-version}</scalaVersion>
                  </configuration>
                </plugin>
              </plugins>
            </reporting>
      -->
    </profile>

    <!-- use plugin versions which work for maven 2.x -->
    <profile>
      <id>m2</id>
      <properties>
        <site-plugin-version>2.1.1</site-plugin-version>
      </properties>
    </profile>

    <!-- so we can create a distro on our CI box -->
    <profile>
      <id>distro</id>
      <modules>
        <module>scalate-website</module>
        <module>scalate-distro</module>
      </modules>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${source-plugin-version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Generate the Scala Docs so that they can be included in the javadoc artifact -->
          <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
            <version>${scala-plugin-version}</version>
            <executions>
              <execution>
                <id>doc</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>doc</goal>
                </goals>
                <configuration>
                  <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
                  <outputDirectory>apidocs</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- requires pygmentize to be installed -->
    <profile>
      <id>pygmentize</id>
      <modules>
        <module>scalate-sample-sitegen</module>
      </modules>
    </profile>


    <profile>
      <id>release</id>
      <modules>
        <module>scalate-website</module>
        <module>scalate-distro</module>
      </modules>
      <build>
        <plugins>
          <!-- We want to sign the artifact, the POM, and all attached artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.1</version>
            <configuration>
              <passphrase>${gpg.passphrase}</passphrase>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${source-plugin-version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Generate the Scala Docs so that they can be included in the javadoc artifact -->
          <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
            <version>${scala-plugin-version}</version>
            <executions>
              <execution>
                <id>doc</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>doc</goal>
                </goals>
                <configuration>
                  <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
                  <outputDirectory>apidocs</outputDirectory>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <args>
                <arg>-optimise</arg>
              </args>
            </configuration>
          </plugin>
        </plugins>
      </build>

      <!-- TODO remove ASAP! for now use the 2.1 staging release of the mvn release plugin until its released -->
      <pluginRepositories>
        <pluginRepository>
          <id>staging.002.apache.org</id>
          <url>https://repository.apache.org/content/repositories/maven-002</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>

    <!--
      To generate a graph of the project dependencies, run: mvn -P graph
      graph:project
    -->
    <profile>
      <id>graph</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.fusesource.mvnplugins</groupId>
            <artifactId>maven-graph-plugin</artifactId>
            <version>${mvnplugins-version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- 
      Do a license check by running       : mvn -P license license:check
      Update the license check by running : mvn -P license license:format
    -->
    <profile>
      <id>license</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
            <version>1.9.0</version>
            <configuration>
              <quiet>false</quiet>
              <header>src/main/resources/license-header.txt</header>
              <aggregate>true</aggregate>
              <includes>
                <include>src/**</include>
                <include>**/pom.xml</include>
              </includes>
              <excludes>
                <exclude>**/.git/**</exclude>
                <exclude>**/src/test/resources/moustache/**</exclude>
                <exclude>**/src/test/resources/test-lib/fake-jar</exclude>
                <exclude>**/src/main/resources/META-INF/services/jersey-server-components</exclude>
                <exclude>**/WEB-INF/_scalate/**</exclude>
                <exclude>**/dummy.txt</exclude>
                <exclude>**/foo.txt</exclude>
                <exclude>**/foo.mustache</exclude>
                <exclude>**/src/highlight/**</exclude>
                <exclude>**/.livereload</exclude>
                <exclude>**/pygmentize.css</exclude>
                <exclude>**/*.md</exclude>
                <exclude>**/*.conf</exclude>
                <exclude>**/*.page</exclude>
                <exclude>**/banner.txt</exclude>
                

                <!-- ignore files produced during a build -->
                <exclude>**/target/**</exclude>

                <!-- ignore binary files -->
                <exclude>**/*.jpg</exclude>
                <exclude>**/*.png</exclude>
                <exclude>**/*.gif</exclude>
                <exclude>**/*.ico</exclude>
                <exclude>**/*.keystore</exclude>
              </excludes>
              <useDefaultExcludes>false</useDefaultExcludes>
              <mapping>
                <ssp>DYNASCRIPT_STYLE</ssp>
                <jj>JAVADOC_STYLE</jj>
                <index>SCRIPT_STYLE</index>
                <jade>HAML_STYLE</jade>
              </mapping>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- lets us pre compile Scalate templates as part of the build -->
    <profile>
      <id>precompile</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.fusesource.scalate</groupId>
            <artifactId>maven-scalate-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>precompile</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jrebel</id>
      <dependencies>
        <dependency>
          <groupId>org.fusesource.scalate</groupId>
          <artifactId>scalate-jrebel</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
